@using System.Text.Json

@page "/"

@inject AuthenticationService _authService

<h1>User Info</h1>

@if (_authService.SessionState == SessionStates.Active)
{

    <div>
        <div class="form-group row">
            <label for="avatar" class="col-sm-2 col-form-label">Picture</label>
            <div class="col-sm-10">
                <img id="avatar" src="@_authService.User.Picture" alt="..." class="img-thumbnail">
            </div>
        </div>
        <div class="form-group row">
            <label for="email" class="col-sm-2 col-form-label">Email</label>
            <div class="col-sm-10">
                <input type="text" readonly class="form-control-plaintext" id="email" @bind="@_authService.User.Email"/>
            </div>
        </div>
        <div class="form-group row">
            <label for="nickname" class="col-sm-2 col-form-label">Nickname</label>
            <div class="col-sm-10">
                <input type="text" readonly class="form-control-plaintext" id="nickname" @bind="@_authService.User.Nickname"/>
            </div>
        </div>
        <div class="form-group row">
            <label for="staticEmail" class="col-sm-2 col-form-label">Raw JSON</label>
            <div class="col-sm-10">
                <code>
                    @JsonSerializer.Serialize(_authService.User)
                </code>
            </div>
        </div>
    </div>



    <button class="btn btn-danger" @onclick="_authService.LogOut">LogOut</button>

}
else
{
<button class="btn btn-primary" @onclick="_authService.Authorize">Login</button>
}


@code{

    protected override void OnInit()
    {
        _authService.OnSessionStateChanged += OnSessionStateChangeHandler;
        base.OnInit();
    }

    protected void OnSessionStateChangeHandler(object sender, SessionStates state)
    {
        StateHasChanged();
    }

}

